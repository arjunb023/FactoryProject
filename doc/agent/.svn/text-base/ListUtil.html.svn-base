<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0_01) on Sun Nov 27 15:29:14 PST 2011 -->
<title>ListUtil</title>
<meta name="date" content="2011-11-27">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="ListUtil";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/ListUtil.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../agent/Constants.html" title="interface in agent"><span class="strong">Prev Class</span></a></li>
<li><a href="../agent/StringUtil.html" title="class in agent"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?agent/ListUtil.html" target="_top">Frames</a></li>
<li><a href="ListUtil.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">agent</div>
<h2 title="Class ListUtil" class="title">Class ListUtil</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>agent.ListUtil</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="strong">ListUtil</span>
extends java.lang.Object</pre>
<div class="block">Create a list of Object from a call list.</div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier</th>
<th class="colLast" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private </code></td>
<td class="colLast"><code><strong><a href="../agent/ListUtil.html#ListUtil()">ListUtil</a></strong>()</code>
<div class="block">Don't construct.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static java.util.List&lt;java.lang.Object&gt;</code></td>
<td class="colLast"><code><strong><a href="../agent/ListUtil.html#fromArray(java.lang.Object[])">fromArray</a></strong>(java.lang.Object[]&nbsp;array)</code>
<div class="block">Create a list containing the elements of an array</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static java.util.List&lt;java.lang.Object&gt;</code></td>
<td class="colLast"><code><strong><a href="../agent/ListUtil.html#fromCSV(java.lang.String)">fromCSV</a></strong>(java.lang.String&nbsp;csv)</code>
<div class="block">Create a list containing the elements of a comma separated string</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static java.util.List&lt;java.lang.Object&gt;</code></td>
<td class="colLast"><code><strong><a href="../agent/ListUtil.html#fromIterator(java.util.Iterator)">fromIterator</a></strong>(java.util.Iterator&nbsp;iterator)</code>
<div class="block">Create a list containing the elements of an iterator</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static java.util.List&lt;java.lang.Object&gt;</code></td>
<td class="colLast"><code><strong><a href="../agent/ListUtil.html#immutableListOfType(java.util.List, java.lang.Class)">immutableListOfType</a></strong>(java.util.List&lt;java.lang.Object&gt;&nbsp;list,
                   java.lang.Class&nbsp;type)</code>
<div class="block">Check that all elements of the list are of the specified type, and return
 an unmodifiable copy of the list.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>private static java.util.List&lt;java.lang.Object&gt;</code></td>
<td class="colLast"><code><strong><a href="../agent/ListUtil.html#immutableListOfType(java.util.List, java.lang.Class, boolean)">immutableListOfType</a></strong>(java.util.List&lt;java.lang.Object&gt;&nbsp;list,
                   java.lang.Class&nbsp;type,
                   boolean&nbsp;nullOk)</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static java.util.List&lt;java.lang.Object&gt;</code></td>
<td class="colLast"><code><strong><a href="../agent/ListUtil.html#immutableListOfTypeOrNull(java.util.List, java.lang.Class)">immutableListOfTypeOrNull</a></strong>(java.util.List&lt;java.lang.Object&gt;&nbsp;list,
                         java.lang.Class&nbsp;type)</code>
<div class="block">Check that all elements of the list are either of the specified type or
 null, and return an unmodifiable copy of the list.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static java.util.List&lt;java.lang.Object&gt;</code></td>
<td class="colLast"><code><strong><a href="../agent/ListUtil.html#list(java.lang.Object...)">list</a></strong>(java.lang.Object...&nbsp;args)</code>
<div class="block">Create list from arg list.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static java.util.List&lt;java.lang.Object&gt;</code></td>
<td class="colLast"><code><strong><a href="../agent/ListUtil.html#reverseCopy(java.util.List)">reverseCopy</a></strong>(java.util.List&lt;java.lang.Object&gt;&nbsp;list)</code>
<div class="block">Return a copy of the list, in reverse order.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="ListUtil()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>ListUtil</h4>
<pre>private&nbsp;ListUtil()</pre>
<div class="block">Don't construct.</div>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="list(java.lang.Object...)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>list</h4>
<pre>public static&nbsp;java.util.List&lt;java.lang.Object&gt;&nbsp;list(java.lang.Object...&nbsp;args)</pre>
<div class="block">Create list from arg list.</div>
</li>
</ul>
<a name="fromArray(java.lang.Object[])">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>fromArray</h4>
<pre>public static&nbsp;java.util.List&lt;java.lang.Object&gt;&nbsp;fromArray(java.lang.Object[]&nbsp;array)</pre>
<div class="block">Create a list containing the elements of an array</div>
</li>
</ul>
<a name="fromIterator(java.util.Iterator)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>fromIterator</h4>
<pre>public static&nbsp;java.util.List&lt;java.lang.Object&gt;&nbsp;fromIterator(java.util.Iterator&nbsp;iterator)</pre>
<div class="block">Create a list containing the elements of an iterator</div>
</li>
</ul>
<a name="fromCSV(java.lang.String)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>fromCSV</h4>
<pre>public static&nbsp;java.util.List&lt;java.lang.Object&gt;&nbsp;fromCSV(java.lang.String&nbsp;csv)</pre>
<div class="block">Create a list containing the elements of a comma separated string</div>
</li>
</ul>
<a name="immutableListOfType(java.util.List, java.lang.Class)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>immutableListOfType</h4>
<pre>public static&nbsp;java.util.List&lt;java.lang.Object&gt;&nbsp;immutableListOfType(java.util.List&lt;java.lang.Object&gt;&nbsp;list,
                                                   java.lang.Class&nbsp;type)</pre>
<div class="block">Check that all elements of the list are of the specified type, and return
 an unmodifiable copy of the list.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>list</code> - the list.</dd><dd><code>type</code> - the class with which all items of the list must be
            assignment-compatible.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.NullPointerException</code> - if the list is null or if any element is null</dd>
<dd><code>java.lang.ClassCastException</code> - if an item is not of the proper type</dd></dl>
</li>
</ul>
<a name="immutableListOfTypeOrNull(java.util.List, java.lang.Class)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>immutableListOfTypeOrNull</h4>
<pre>public static&nbsp;java.util.List&lt;java.lang.Object&gt;&nbsp;immutableListOfTypeOrNull(java.util.List&lt;java.lang.Object&gt;&nbsp;list,
                                                         java.lang.Class&nbsp;type)</pre>
<div class="block">Check that all elements of the list are either of the specified type or
 null, and return an unmodifiable copy of the list.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>list</code> - the list.</dd><dd><code>type</code> - the class with which all items of the list must be
            assignment-compatible.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>java.lang.NullPointerException</code> - if the list is null</dd>
<dd><code>java.lang.ClassCastException</code> - if an item is not of the proper type</dd></dl>
</li>
</ul>
<a name="immutableListOfType(java.util.List, java.lang.Class, boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>immutableListOfType</h4>
<pre>private static&nbsp;java.util.List&lt;java.lang.Object&gt;&nbsp;immutableListOfType(java.util.List&lt;java.lang.Object&gt;&nbsp;list,
                                                   java.lang.Class&nbsp;type,
                                                   boolean&nbsp;nullOk)</pre>
</li>
</ul>
<a name="reverseCopy(java.util.List)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>reverseCopy</h4>
<pre>public static&nbsp;java.util.List&lt;java.lang.Object&gt;&nbsp;reverseCopy(java.util.List&lt;java.lang.Object&gt;&nbsp;list)</pre>
<div class="block">Return a copy of the list, in reverse order.</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>list</code> - the List to reverse.</dd>
<dt><span class="strong">Returns:</span></dt><dd>A new list with elements in reverse order of the original list.</dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/ListUtil.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../agent/Constants.html" title="interface in agent"><span class="strong">Prev Class</span></a></li>
<li><a href="../agent/StringUtil.html" title="class in agent"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?agent/ListUtil.html" target="_top">Frames</a></li>
<li><a href="ListUtil.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
