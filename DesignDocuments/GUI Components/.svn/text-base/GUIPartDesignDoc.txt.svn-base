GUIPart Class:
	Instance variables:
		private Rectangle2D.Double partPlaceholder  
		private int xPos
		private int yPos
		private int width
		private int height
		private int angle
		private int timeSinceExplosion
		private int time
		private String name
		private PartType type
		public enum State {GOOD, BAD, MISSING, EXPLODING, UKNOWN}
		private State state
		private ImageIcon image
		private int stdWidth
		private int stdHeight
		private ImageIcon stdImage

	Method Name:
		getName
	Formal Parameters:
		None
	Formal Type:
		public
	Return Type:
		String
	Method Description:
		Returns the name of the Part.
	Method Preconditions:
		None
	Method Postconditions: 
		None
	Method Interaction:
		None
	Input and Output Format:
		None
		
	Method Name:
		givePart
	Formal Parameters:
		GUIPart part
		GUIComponent giver
	Formal Type:
		public
	Return Type:
		void
	Method Description:
		Overrides the GUIComponentInterface function givePart.
	Method Preconditions:
		None
	Method Postconditions: 
		None
	Method Interaction:
		None
	Input and Output Format:
		None
		
	Method Name:
		getPart
	Formal Parameters:
		int position
	Formal Type:
		public
	Return Type:
		GUIPart
	Method Description:
		Overrides the GUIComponentInterface function getPart.
		Returns null.
	Method Preconditions:
		None
	Method Postconditions: 
		None
	Method Interaction:
		None
	Input and Output Format:
		None
	
	Method Name:
		gotPart
	Formal Parameters:
		GUIPart part
	Formal Type:
		public
	Return Type:
		void
	Method Description:
		Overrides the GUIComponentInterface function gotPart.
	Method Preconditions:
		None
	Method Postconditions: 
		None
	Method Interaction:
		None
	Input and Output Format:
		None
	
	Method Name:
		update
	Formal Parameters:
		None
	Formal Type:
		public
	Return Type:
		void
	Method Description:
		Convenience method for other classes to change the display 
		representing this part after an operation is completed on the part.
	Method Preconditions:
		None
	Method Postconditions: 
		None
	Method Interaction:
		None
	Input and Output Format:
		None
	
	Method Name:
		draw
	Formal Parameters:
		Graphics g1
	Formal Type:
		public
	Return Type:
		void
	Method Description:
		Displays the part on screen by drawing its images to a Graphics2D object.
	Method Preconditions:
		None
	Method Postconditions: 
		None
	Method Interaction:
		None
	Input and Output Format:
		None
	
	Method Name:
		moveX
	Formal Parameters:
		int numPixels
	Formal Type:
		public
	Return Type:
		void
	Method Description:
		Moves the part in the horizontal direction by the specified number of pixels. If numPixels is positive, moves right.
		If numPixels is negative, moves left.
	Method Preconditions:
		None
	Method Postconditions: 
		None
	Method Interaction:
		None 
	Input and Output Format:
		None
		
	Method Name:
		moveY
	Formal Parameters:
		int numPixels
	Formal Type:
		public
	Return Type:
		void
	Method Description:
		Moves the part in the vertical direction by the specified number of pixels. If numPixels is positive, moves up.
		If numPixels is negative, moves down.
	Method Preconditions:
		None
	Method Postconditions: 
		None
	Method Interaction:
		None 
	Input and Output Format:
		None
		
	Method Name:
		zoom
	Formal Parameters:
		int amount
	Formal Type:
		public
	Return Type:
		void
	Method Description:
		Makes the size of the part bigger or smaller by the specified amount.
		If amount is positive, zooms in. If amount is negative, zooms out.
	Method Preconditions:
		None
	Method Postconditions: 
		None
	Method Interaction:
		None 
	Input and Output Format:
		None
		
	Method Name:
		rotate
	Formal Parameters:
		int amount
	Formal Type:
		public
	Return Type:
		void
	Method Description:
		Rotates the part by the specified amount. If amount is positive, rotates clockwise.
	 	If amount is negative, rotates counter clockwise.
	Method Preconditions:
		None
	Method Postconditions: 
		None
	Method Interaction:
		None 
	Input and Output Format:
		None
	
	Method Name:
		explode
	Formal Parameters:
		None
	Formal Type:
		public
	Return Type:
		boolean
	Method Description:
		Changes the part to the exploded state and changes the image to the exploded image.
	Method Preconditions:
		None
	Method Postconditions: 
		None
	Method Interaction:
		None 
	Input and Output Format:
		None
	
	Method Name:
		setName
	Formal Parameters:
		String s
	Formal Type:
		public
	Return Type:
		void
	Method Description:
		Sets the name of the part.
	Method Preconditions:
		None
	Method Postconditions: 
		None
	Method Interaction:
		None 
	Input and Output Format:
		None
		
	Method Name:
		setState
	Formal Parameters:
		State s
	Formal Type:
		public
	Return Type:
		void
	Method Description:
		Sets the state of the part to the enum of the parameter.
	Method Preconditions:
		None
	Method Postconditions: 
		None
	Method Interaction:
		None 
	Input and Output Format:
		None
		
	Method Name:
		setX
	Formal Parameters:
		int x
	Formal Type:
		public
	Return Type:
		None
	Method Description:
		Sets the x position of the part.
	Method Preconditions:
		None
	Method Postconditions: 
		None
	Method Interaction:
		None
	Input and Output Format:
		None
		
	Method Name:
		setY
	Formal Parameters:
		int y
	Formal Type:
		public
	Return Type:
		None
	Method Description:
		Sets the y position of the part.
	Method Preconditions:
		None
	Method Postconditions: 
		None
	Method Interaction:
		None
	Input and Output Format:
		None
		
	Method Name:
		setAngle
	Formal Parameters:
		int a
	Formal Type:
		public
	Return Type:
		None
	Method Description:
		Sets the angle of rotation of the part.
	Method Preconditions:
		None
	Method Postconditions: 
		None
	Method Interaction:
		None
	Input and Output Format:
		None 
	
	Method Name:
		getState
	Formal Parameters:
		None
	Formal Type:
		public
	Return Type:
		State
	Method Description:
		Returns the state of the part in the form of an enum.
	Method Preconditions:
		None
	Method Postconditions: 
		None
	Method Interaction:
		None 
	Input and Output Format:
		None 
		
	Method Name:
		getX
	Formal Parameters:
		None
	Formal Type:
		public
	Return Type:
		int
	Method Description:
		Returns the current x position of the part.
	Method Preconditions:
		None
	Method Postconditions: 
		None
	Method Interaction:
		None 
	Input and Output Format:
		None

	Method Name:
		getY
	Formal Parameters:
		None
	Formal Type:
		public
	Return Type:
		int
	Method Description:
		Returns the current y position of the part.
	Method Preconditions:
		None
	Method Postconditions: 
		None
	Method Interaction:
		None 
	Input and Output Format:
		None
		
	Method Name:
		getWidth
	Formal Parameters:
		None
	Formal Type:
		public
	Return Type:
		int
	Method Description:
		Returns the width of the part.
	Method Preconditions:
		None
	Method Postconditions: 
		None
	Method Interaction:
		None 
	Input and Output Format:
		None	
		
	Method Name:
		getHeight
	Formal Parameters:
		None
	Formal Type:
		public
	Return Type:
		int
	Method Description:
		Returns the height of the part.
	Method Preconditions:
		None
	Method Postconditions: 
		None
	Method Interaction:
		None 
	Input and Output Format:
		None
		
	Method Name:
		getType
	Formal Parameters:
		None
	Formal Type:
		public
	Return Type:
		PartType
	Method Description:
		Returns the part type in the form of an enum.
	Method Preconditions:
		None
	Method Postconditions: 
		None
	Method Interaction:
		None 
	Input and Output Format:
		None